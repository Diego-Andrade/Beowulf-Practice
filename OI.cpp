// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "OI.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/Autonomous.h"
#include "Commands/ConveyorOff.h"
#include "Commands/ConveyorOn.h"
#include "Commands/IntakeMaintain.h"
#include "Commands/IntakeOff.h"
#include "Commands/IntakeOn.h"
#include "Commands/IntakeToggle.h"
#include "Commands/ShooterOff.h"
#include "Commands/ShooterOn.h"
#include "Commands/TankDrive.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
OI::OI() {
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	driver = new Joystick(1);
	
	dButtonX = new JoystickButton(driver, 3);
	dButtonX->WhileHeld(new ShooterOn());
	dButtonB = new JoystickButton(driver, 2);
	dButtonB->WhileHeld(new ConveyorOn());
	dButtonA = new JoystickButton(driver, 1);
	dButtonA->WhenReleased(new IntakeToggle());
     
        // SmartDashboard Buttons
	SmartDashboard::PutData("IntakeOff", new IntakeOff());
	SmartDashboard::PutData("IntakeOn", new IntakeOn());
	SmartDashboard::PutData("IntakeToggle", new IntakeToggle());
	SmartDashboard::PutData("IntakeMaintain", new IntakeMaintain());
	SmartDashboard::PutData("ConveyorOff", new ConveyorOff());
	SmartDashboard::PutData("ConveyorOn", new ConveyorOn());
	SmartDashboard::PutData("ShooterOff", new ShooterOff());
	SmartDashboard::PutData("ShooterOn", new ShooterOn());
	SmartDashboard::PutData("TankDrive", new TankDrive());
	SmartDashboard::PutData("Autonomous", new Autonomous());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
Joystick* OI::getDriver() {
	return driver;
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
